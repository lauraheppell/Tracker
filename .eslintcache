[{"/home/thoughtstem/Desktop/grocery-split/src/index.js":"1","/home/thoughtstem/Desktop/grocery-split/src/App.js":"2","/home/thoughtstem/Desktop/grocery-split/src/reportWebVitals.js":"3","/home/thoughtstem/Desktop/tracker/src/index.js":"4","/home/thoughtstem/Desktop/tracker/src/App.js":"5","/home/thoughtstem/Desktop/tracker/src/reportWebVitals.js":"6"},{"size":500,"mtime":1612057636998,"results":"7","hashOfConfig":"8"},{"size":5649,"mtime":1613953865179,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612057636999,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1615766065934,"results":"11","hashOfConfig":"12"},{"size":6026,"mtime":1616971776286,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1615766065934,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"o33n1u",{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ivfuy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/thoughtstem/Desktop/grocery-split/src/index.js",[],["31","32"],"/home/thoughtstem/Desktop/grocery-split/src/App.js",["33","34","35","36"],"//TODO: reset button\n//TODO: return no negative numbers in person's share\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import Fab from \"@material-ui/core/Fab\";\n//import AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n//export default function FloatingActionButtons() {\n//  const classes = useStyles();\n//}\n\nlet prices = {\n  hummus: 3.99,\n  proteinBars: 16.99,\n  cliffBars: 5.99,\n  jelly: 2.29,\n  cucumber: 0.79,\n  organicBabyCarrots: 2.5,\n  riceMilk: 3.79,\n  cafeBustelo: 4.19,\n  tea: 6.39,\n};\n\nfunction priceForItems(items) {\n  let total = 0;\n  for (let i = 0; i <= items.length - 1; i++) {\n    total += prices[items[i]];\n  }\n  return total;\n}\n\nfunction splitBill(total, lauraStuff, stephenStuff) {\n  let stephenFood = priceForItems(stephenStuff);\n  let lauraFood = priceForItems(lauraStuff);\n\n  let removedExtra = total - stephenFood - lauraFood;\n\n  let lauraToStephen = removedExtra / 2 + lauraFood;\n\n  return lauraToStephen.toFixed(2);\n  //return Math.round(lauraToStephen * 100) / 100;\n}\n\n/*\nfunction CoolCheckBox(props) {\n  return (\n    <div>\n      {props.title + \" \"}\n      <input\n        type=\"checkbox\"\n        onChange={(e) => {\n          if (e.target.checked) {\n            props.setStuff(props.stuff.concat([props.itemName]));\n          } else {\n            props.setStuff(props.stuff.filter((s) => s != props.itemName));\n          }\n        }}\n      />\n      <p> </p>\n    </div>\n  );\n}\n*/\n\nfunction CoolCheckBox(props) {\n  function counter() {\n    let sum = 0;\n    for (let i = 0; i <= props.stuff.length - 1; i++) {\n      if (props.stuff[i] === props.itemName) sum += 1;\n    }\n\n    return <>{sum}</>;\n  }\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        color=\"secondary\"\n        onClick={(e) => {\n          for (let i = props.stuff.length - 1; i >= 0; i--) {\n            if (props.stuff[i] === props.itemName) {\n              let removedItems = props.stuff.splice(i, 1);\n              props.setStuff([...props.stuff]);\n              break;\n            }\n          }\n        }}\n      >\n        -\n      </Button>\n      {props.title + \" \"}\n      {counter()}\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        color=\"secondary\"\n        onClick={(e) => {\n          props.setStuff(props.stuff.concat([props.itemName]));\n        }}\n      >\n        +\n      </Button>\n      <p> </p>\n    </div>\n  );\n}\n\nfunction App() {\n  let [cost, setCost] = useState(0);\n  let [lauraStuff, setLauraStuff] = useState([]);\n  let [stephenStuff, setStephenStuff] = useState([]);\n  return (\n    <div>\n      <div class=\"header\">\n        <h1> Let's split the grocery bill!</h1>\n      </div>\n      <div class=\"parent\">\n        <div class=\"child inline-block-child\">\n          <h2> Laura's items </h2>\n          <CoolCheckBox\n            title={\"Cliff Bars\"}\n            itemName={\"cliffBars\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n          <CoolCheckBox\n            title={\"Hummus\"}\n            itemName={\"hummus\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n          <CoolCheckBox\n            title={\"Cucumber\"}\n            itemName={\"cucumber\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n          <CoolCheckBox\n            title={\"Rice Milk\"}\n            itemName={\"riceMilk\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n          <CoolCheckBox\n            title={\"Coffee\"}\n            itemName={\"cafeBustelo\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n          <CoolCheckBox\n            title={\"Carrots\"}\n            itemName={\"organicBabyCarrots\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n          <CoolCheckBox\n            title={\"Tea\"}\n            itemName={\"tea\"}\n            setStuff={setLauraStuff}\n            stuff={lauraStuff}\n          />\n        </div>\n        <div class=\"child inline-block-child\">\n          <h2> Stephen's items </h2>\n          <CoolCheckBox\n            title={\"Protein Bars\"}\n            itemName={\"proteinBars\"}\n            setStuff={setStephenStuff}\n            stuff={stephenStuff}\n          />\n          <CoolCheckBox\n            title={\"Carrots\"}\n            itemName={\"organicBabyCarrots\"}\n            setStuff={setStephenStuff}\n            stuff={stephenStuff}\n          />\n          <CoolCheckBox\n            title={\"Tea\"}\n            itemName={\"tea\"}\n            setStuff={setStephenStuff}\n            stuff={stephenStuff}\n          />\n        </div>\n      </div>\n      <div class=\"parent\">\n        <div class=\"child inline-block-child no-dashes\">\n          <h2> Total cost: </h2>\n          <input\n            type=\"text\"\n            name=\"total\"\n            onChange={(e) => {\n              setCost(e.target.value);\n            }}\n          />\n\n          <p>Laura's share: {splitBill(cost, lauraStuff, stephenStuff)}</p>\n          <p>\n            Stephen's share:{\" \"}\n            {(cost - splitBill(cost, lauraStuff, stephenStuff)).toFixed(2)}\n          </p>\n        </div>\n        <div class=\"child inline-block-child no-dashes\">\n          <Button variant=\"contained\">Reset</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/thoughtstem/Desktop/grocery-split/src/reportWebVitals.js",[],["37","38"],"/home/thoughtstem/Desktop/tracker/src/index.js",[],["39","40"],"/home/thoughtstem/Desktop/tracker/src/App.js",["41","42"],"/home/thoughtstem/Desktop/tracker/src/reportWebVitals.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":14},{"ruleId":"47","severity":1,"message":"52","line":13,"column":7,"nodeType":"49","messageId":"50","endLine":13,"endColumn":16},{"ruleId":"47","severity":1,"message":"53","line":100,"column":19,"nodeType":"49","messageId":"50","endLine":100,"endColumn":31},{"ruleId":"43","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},{"ruleId":"43","replacedBy":"56"},{"ruleId":"45","replacedBy":"57"},{"ruleId":"47","severity":1,"message":"58","line":2,"column":17,"nodeType":"49","messageId":"50","endLine":2,"endColumn":25},{"ruleId":"47","severity":1,"message":"59","line":15,"column":3,"nodeType":"49","messageId":"50","endLine":15,"endColumn":21},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useStyles' is assigned a value but never used.","'removedItems' is assigned a value but never used.",["60"],["61"],["60"],["61"],"'useState' is defined but never used.","'KeyboardTimePicker' is defined but never used.","no-global-assign","no-unsafe-negation"]